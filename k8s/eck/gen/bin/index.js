"use strict";
// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
// Export members:
__export(require("./provider"));
// Export sub-modules:
const agent = require("./agent");
exports.agent = agent;
const apm = require("./apm");
exports.apm = apm;
const beat = require("./beat");
exports.beat = beat;
const elasticsearch = require("./elasticsearch");
exports.elasticsearch = elasticsearch;
const enterprisesearch = require("./enterprisesearch");
exports.enterprisesearch = enterprisesearch;
const kibana = require("./kibana");
exports.kibana = kibana;
const maps = require("./maps");
exports.maps = maps;
const types = require("./types");
exports.types = types;
const provider_1 = require("./provider");
pulumi.runtime.registerResourcePackage("eck", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:crds") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new provider_1.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map